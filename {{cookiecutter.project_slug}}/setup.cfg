{%- set license_classifiers = {
    'MIT license': 'License :: OSI Approved :: MIT License',
    'BSD license': 'License :: OSI Approved :: BSD License',
    'ISC license': 'License :: OSI Approved :: ISC License (ISCL)',
    'Apache Software License 2.0': 'License :: OSI Approved :: Apache Software License',
    'GNU General Public License v3': 'License :: OSI Approved :: GNU General Public License v3 (GPLv3)'
} %}

[metadata]
name = {{ cookiecutter.project_slug }}
version = {{ cookiecutter.version }}
url = {{ cookiecutter.git_remote_repository }}
license = {{ cookiecutter.open_source_license }}
author = {{ cookiecutter.full_name.replace('\"', '\\\"') }}
author_email = {{ cookiecutter.email }}
maintainer = {{ cookiecutter.full_name.replace('\"', '\\\"') }}
maintainer_email = {{ cookiecutter.email }}
description = {{ cookiecutter.project_short_description }}
long_description = file: README.md
long_description_content_type = text/markdown
classifiers =
    Development Status :: 4 - Beta
    Environment :: Console
    Intended Audience :: Developers
{%- if cookiecutter.open_source_license in license_classifiers %}
        '{{ license_classifiers[cookiecutter.open_source_license] }}',
{%- endif %}
    Operating System :: OS Independent
    Programming Language :: Python

[options]
packages = find:
package_dir = = src
include_package_data = true
python_requires = >= 3.7
# Dependencies are in setup.py for GitHub's dependency graph.

[options.packages.find]
where = src

{% if cookiecutter.use_pytest == 'y' -%}
[options.extras_require]
test =
    pytest
{% endif %}

{%- if 'no' not in cookiecutter.command_line_interface|lower %}
[options.entry_points]
console_scripts =
    {{ cookiecutter.project_slug }}={{ cookiecutter.project_slug }}.cli:main
{%- endif %}

[flake8]
# B = bugbear
# E = pycodestyle errors
# F = flake8 pyflakes
# W = pycodestyle warnings
# B9 = bugbear opinions
# ISC = implicit-str-concat
select = B, E, F, W, B9, ISC
ignore =
    # slice notation whitespace, invalid
    E203
    # import at top, too many circular import fixes
    E402
    # line length, handled by bugbear B950
    E501
    # bare except, handled by bugbear B001
    E722
    # bin op line break, invalid
    W503
# up to 88 allowed by bugbear B950
max-line-length = 80
per-file-ignores = __init__.py: F401
exclude = docs

{%- if cookiecutter.use_pytest == 'y' %}
[tool:pytest]
testpaths = tests
filterwarnings =
    error
{%- endif %}

[coverage:run]
branch = True
source =
    {{ cookiecutter.project_slug }}
    tests

[coverage:paths]
source =
    src
    */site-packages

[bdist_wheel]
universal = 1
